name: Branch workflow
on:
  push:
    branches-ignore:
      - master
      - 'release/**'
      - 'releases/**'
  pull_request:
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  MSBUILDSINGLELOADCONTEXT: 1
jobs:
  generateVersionInfo:
    name: GenerateVersionInfo
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Restore dotnet tools
      run: dotnet tool restore
    - name: Fetch complete repository including tags
      run: git fetch --tags --force --prune && git describe
    - name: Generate version info from git history
      run: dotnet gitversion /output json | jq -r 'to_entries|map("GitVersion_\(.key)=\(.value|tostring)")|.[]' >> gitversion.env && cat gitversion.env
    - name: Upload version info file
      uses: actions/upload-artifact@v1
      with:
        name: gitversion
        path: gitversion.env

  build:
    name: Build
    needs: generateVersionInfo
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download version info file
      uses: actions/download-artifact@v3
      with:
        name: gitversion
        path: ./
    - name: Inject version info into environment
      run: cat ./gitversion.env >> $GITHUB_ENV
    - name: Build solution
      run: echo "Current version is \"$GitVersion_SemVer\"" && dotnet build -c Release
    - name: Create NuGet packages
      run: dotnet pack -c Release --no-build -o nupkg
    - name: Upload nuget packages
      uses: actions/upload-artifact@v1
      with:
        name: nupkg
        path: nupkg

  test:
    name: Test
    needs: [build, generateVersionInfo]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download version info file
      uses: actions/download-artifact@v3
      with:
        name: gitversion
        path: ./
    - name: Inject version info into environment
      run: cat ./gitversion.env >> $GITHUB_ENV
    - name: Run tests
      run: echo "Current version is \"$GitVersion_SemVer\"" && dotnet test -c Release
